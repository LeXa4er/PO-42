<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r4UoH5CorAAAAABJRU5ErkJggg==
</value>
  </data>
</root>